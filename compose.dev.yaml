version: '3.8'
services:
  frontend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm start" # Use npm start for development server
    environment:
      REACT_APP_BACKEND_API_URL: http://localhost:3001
    depends_on:
      - backend

  backend:
    image: node:18-alpine
    working_dir: /app
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
    command: sh -c "npm install && npx nodemon index.js" # Use nodemon for development
    environment:
      PGHOST: db
      PGUSER: postgres
      PGPASSWORD: password
      PGDATABASE: app_db
      PGPORT: 5432
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/health"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 10s

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: $POSTGRES_USER
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: $POSTGRES_DB
    volumes:
      - db_data:/var/lib/postgresql/data/
      - ./db-init:/docker-entrypoint-initdb.d/
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 10s
      timeout: 5s
      retries: 3
      start_period: 15s

volumes:
  db_data:
